can do very basic (and very slow) simulations in multiple dimensions, but basically just limited to difusion and advection right now


speed up by:
    right now it differentiates on entire matrix across all time, just differentiate on current time

replace matrix multiplication with convolution, makes it much simpler, Unknown type no longer required for convolution, multidimensional very simple then

fields which are edges of other fields (e.g. temperature flux is on the edges of temperature cells)
    would allow for boundary conditions on these derivative fields


need to figure out how to make defining kernels straightforward, possibilities:


diff method for Field needs to divide by the step size


methods for initial conditions and boundary conditions which would call set_expression

for boundary conditions, allow to set value at last cell

allow to get data based on coordinate instead of index

check variables in expression for set_expression --> better error messages for invalid expression

show method can be much simpler now that im using numpy arrays instead

good visualization of fields

more consistent/better naming
    values instead of data
    used dim and axes interchangably 

